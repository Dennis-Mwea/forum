# PHP CircleCImysql 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7
        environment:
            - MYSQL_ROOT_PASSWORD: test
            - MYSQL_DATABASE: xinecto_testing
            - MYSQL_USER: xinecto
            - MYSQL_PASSWORD: test
      - image: redis:2.8.19
    steps:
      - checkout
      - run:
      # Our primary container isn't mysql so run a sleep command until its ready
          name: Wait for mysql to be ready
          command: |
              for i in `seq 1 10`;
              do
                nc -z 127.0.0.1 3306 && echo Success && exit 0
                echo -n .
                sleep 1
               done
               echo Failed waiting for mysql && exit 1
      - run: sudo curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
      - run: sudo apt update
      - run: sudo apt upgrade -y
      - run: sudo apt install apache2 nodejs libpng-dev wget libsqlite3-dev libzip-dev libnss3 libgconf-2-4 libfontconfig1 xvfb -y
      - run: sudo apt install -f
      - run: sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
      - run: sudo docker-php-ext-install zip gd mbstring mysqli pdo pdo_mysql bcmath
      - run:
          name: Install mysql Cli; Import dummy data; run an example query
          command: |
              sudo apt install default-mysql-client
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - run: npm run dev
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
            
      # Copy environment variables
      - run: cp .env.travis .env
      
      # install dependencies
      - run: composer self-update
      - run: composer install -n --ignore-platform-reqs --no-interaction

      # generate config key
      - run: php artisan key:generate

      # clear cache
      - run: php artisan config:clear
      - run: php artisan cache:clear

      # prepare the database
      - run: php artisan migrate

      # run chrome on local host
      - run: google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://my.site &

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit --testsuite Unit
      - run: ./vendor/bin/phpunit --testsuite Feature

      - run:
            name: Docker Host
            command: echo 127.0.0.1 my.site | sudo tee -a /etc/hosts

      - run:
            name: Serve Application
            command: sudo php artisan serve --host=my.site --port=8000
            background: true
